This folder contains files to assist with integrating more informative and attractive results into your CruiseControl.Net web reports.

When integrating NCover into your CruiseControl.Net build process, you have two fundamental choices:

1. Merge the raw coverage.xml files using the "out of the box" stylesheets supplied with CC.Net
	PROS:	- requires no further steps in your build process other than running ncover and using a merge publisher with the result.
	CONS:	- produces very large build log files which can slow down your cc.net page rendering.
			- not very exciting, informative or pretty reports!
			- doesnt work if you have multiple xml file outputs.

2. Transform the raw coverage.xml using NCoverExplorer.Console to produce xml which you merge instead of the raw coverage files
	PROS:	- range of report types available such as sequence point or function coverage.
			- detail level of reports can range from summary, module/class or method level.
			- additional information in reports such as overall statistics and code metrics.
			- apply exclusions from assembly to method level, and have these optionally reported.
			- optionally fail builds based on coverage thresholds not being met either at per module or overall threshold levels.
			- can merge multiple xml file outputs before processing into a single report
			- generate xml for merging into your build log, as well as optional html reports directly.
	CONS:	- requires 5-10 minutes of initial configuration setup time (but thats a one off)

	
The files included in this folder are as follows:

	dashboard.config 					- Example of modifications to use NCoverExplorer stylesheets instead of the CC.Net supplied ones.
	NCoverExplorer.xsl 					- For rendering the full html reports by parsing xml generated by NCoverExplorer.Console v2.0 merged into your build log.
										  You will display this report by replacing the "NCover Report" link on the lhs of your web dashboard
	NCoverExplorer-Legacy.xsl 			- Called by NCoverExplorer.xsl if required for rendering earlier NCoverExplorer reports or NCover 1.x output directly. 
										  Required only if you have historical build logs you want to ensure can still be rendered in the output
	NCoverExplorerSummary.xsl 			- For rendering the small coverage summary section on the build report page from NCoverExplorer.Console 2.0 xml output.
	NCoverExplorerSummary-Legacy.xsl	- Called by NCoverExplorerSummary.xsl if required for rendering the summary section against earlier NCoverExplorer
										  versions or merged NCover 1.x output directly.

To make use of the NCoverExplorer stylesheets do the following:

(1) Copy the NCoverExplorer*.xsl stylesheets into the following folder:
	C:\Program Files\Cruise Control.Net\webDashboard\xsl
	
	Note that if you wanted to include NCoverExplorer reports in your emails, you should also copy to:
	C:\Program Files\Cruise Control.Net\server\xsl

(2) Edit this file:
	C:\Program Files\Cruise Control.Net\webDashboard\dashboard.config

    The example dashboard.config in this folder shows how to replace the NCover stylesheets with
    the NCoverExplorer alternatives.

(3) Add a NAnt or MSBuild task running NCoverExplorer.Console.exe which will process the
    coverage.xml file(s) to produce an xml report output. You can either use an <exec> task or you
	can use our custom <NCoverExplorer> (MSBuild) or <ncoverexplorer> (NAnt) tasks located in the
	NCoverExplorer.MSBuildTasks.dll or NCoverExplorer.NAntTasks.dll respectively. Note these
	dlls also contain tasks for automating NCover and some other useful tasks.

(4) In your CruiseControl.Net project, merge the resulting CoverageReport.xml into the buildlog
	using a merge task in your <publishers> section of your CC.Net project xml file (ccnet.config).

For a blog entry showing an example, refer to:
http://www.kiwidude.com/blog/2006/04/ncoverexplorer-v133.html

